{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint",
    "security",
    "custom"
  ],
  "rules": {
    // TypeScript strict rules for security
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-unsafe-argument": "error",
    
    // Require explicit return types on functions
    "@typescript-eslint/explicit-function-return-type": [
      "warn",
      {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true,
        "allowHigherOrderFunctions": true,
        "allowDirectConstAssertionInArrowFunctions": true
      }
    ],
    
    // Prevent common security issues
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-script-url": "error",
    "security/detect-eval-with-expression": "error",
    "security/detect-non-literal-regexp": "warn",
    "security/detect-unsafe-regex": "error",
    
    // Custom rules from eslint-rules directory
    "custom/no-console-logs": "error",
    "custom/no-direct-api-calls": "error",
    "custom/no-inline-sql": "error",
    "custom/no-prisma-in-api-routes": "error",
    "custom/proper-error-handling": "error",
    "custom/require-auth-middleware": "error",
    "custom/require-csrf-token": "error",
    "custom/require-rate-limiting": "error",
    "custom/use-repository-layer": "error",
    "custom/validate-api-input": "error",
    
    // Allow these temporarily during migration
    "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/await-thenable": "error",
    
    // React specific
    "react/display-name": "off",
    "react-hooks/exhaustive-deps": "warn",
    
    // Import rules
    "import/no-anonymous-default-export": "off"
  },
  "overrides": [
    {
      // Allow any in test files temporarily
      "files": ["**/*.test.ts", "**/*.test.tsx", "**/__tests__/**"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-unsafe-assignment": "warn",
        "@typescript-eslint/no-unsafe-member-access": "warn"
      }
    },
    {
      // Migration files can have different rules
      "files": ["**/migrations/**/*.ts"],
      "rules": {
        "custom/no-inline-sql": "off"
      }
    }
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  }
} 